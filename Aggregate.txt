

Q:find 3rd,4th,5th highest ratings sum avg of prices for each ratings

db.movie.aggregate([{$group:{_id:'$rating',sump:{$sum:'$price'},avgp:{$avg:'$price'}}},
{$sort:{_id:-1}},
{$skip:2},
{$limit:3}])

Q: find min max avg count sum of prices for all movies

db.movie.aggregate([
{$group:{_id:null,minp:{$min:'$price'},maxp:{$max:'$price'},avgp:{$avg:'$price'},
count:{$sum:1},sump:{$sum:'$price'}}}])

Q: display name actor rating price ticket_no also displaysum of ticket_no and price

db.movie.aggregate([
{$project:{name:1,price:1,ticket_no:1,rating:1,sump:{$add:[{$ifNull:['$price',0]},{$ifNull:['$ticket_no',0]}]}}}
])

Q: display name in capital price ticket_no and difference between price and ticketnum
if price and ticket no aree not null

price:{$nin:[null],exists:true}
ticket_no:{$nin:[null],exists:true}

db.movie.aggregate([
{$match:{price:{$nin:[null],$exists:true},ticket_no:{$nin:[null],$exists:true}}},
{$project:{name:{$toUpper:'$name'},price:1,ticket_no:1,
differ:{$subtract:['$price','$ticket_no']}}}
])


Q:find discountprice for all movies with raing 1, if the discount is 10%

db.movie.aggregate([
{$match:{rating:3}},
{$project:{name:{$toUpper:'$name'},price:1,
dis_price:{$multiply:['$price',0.90]}}}
])



Q: display all rating in which more than 3 movies are there

db.movie.aggregate([
{$group:{_id:'$rating',countm:{$sum:1}}},
{$match:{countm:{$gte:3}}}
])



Q: find sum of all prices rating wise but display only if the sum is >600

db.movie.aggregate([
{$group:{_id:'$rating',sump:{$sum:'$price'}}},
{$match:{sump:{$gt:600}}}
])

Q: display email for all student
as name followed by ., followed by first 3 letters of name, 
followed by @mycompony.com

db.movie.aggregate([
{$project:{name:1,email:{$concat:['$name','.',
{$substr:['$name',0,3]},"@mycompony.com"]}}}
])

Q: find experiance of employee

db.myemployee.aggregate([
{$project:{name:1,hiredate:1,yearj:{$year:'$hiredate'}}},
{$project:{name:1,hiredate:1,yearj:1,
experiance:{$subtract:[{$year:new Date()},'$yearj']}}}
])

Q: find 3 movies which ticket prices are highest  arrange it on name
db.movie.aggregate([
{$sort:{price:-1}},
{$limit:3},
{$sort:{name:1}}
])



db.employee.insert({ename:'Revati',dept:"UX Design",hiredate:ISODate('2003-11-11')})

db.employee.aggregate([
{$project:{name:1,hiredate:1,yearj:{$year:'$hiredate'}}},
{$project:{name:1,hiredate:1,yearj:1,
experiance:{$subtract:[{$year:new Date()},'$yearj']}}}
])

db.employee.aggregate([{$project:{ename:1,hiredate:1,monj:{$month:'$hiredate'}}}])


$unwind :

db.mystudents.find()
db.mystudents.aggregate([{$unwind:'$grades'},{$match:{'grades.std':6}}])


db.restaurent.aggregate([{$limit:1},{$unwind:'$grades'},{$match:{'grades.score':12}}])

db.movie.aggregate([{$limit:25},{$unwind:'$actor'},{$match:{actor:"Amitabh"}}])